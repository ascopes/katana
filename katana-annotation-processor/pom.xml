<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.ascopes.katana</groupId>
        <artifactId>katana-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>katana-annotation-processor</artifactId>

    <name>Katana Annotation Processor</name>

    <description>
        Annotation processor for Katana to generate data classes during compilation.

        ${katana.description}
    </description>

    <properties>
        <generatedSources.outputDir>${project.build.directory}/generated-sources/katana</generatedSources.outputDir>
        <generatedSources.package>io.ascopes.katana.ap.settings</generatedSources.package>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>katana-annotations</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.testing.compile</groupId>
            <artifactId>compile-testing</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.squareup</groupId>
            <artifactId>javapoet</artifactId>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <compilerArgs>
                        <!--
                        Disable annotation processing during compilation. This prevents the services file
                        from creating a circular dependency during the compilation phase. I could have used
                        Google's AutoService here instead but I'd rather not clutter the classpath more than
                        I have to.
                        -->
                        <arg>-proc:none</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>

                <configuration>
                    <archive>
                        <manifestEntries>
                            <Automatic-Module-Name>io.ascopes.katana.ap</Automatic-Module-Name>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <!-- Generate the descriptors for settings. This makes my life a bit easier by not needing to
                     keep updating loads of redundant code everywhere. -->
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>groovy-maven-plugin</artifactId>

                <executions>
                    <execution>
                        <id>generate-settings-descriptors</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <classpathScope>none</classpathScope>
                            <source>${project.basedir}/src/gen/groovy/SettingsMapperGenerator.groovy</source>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <!-- Stuff we need to be able to generate settings descriptors -->
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>katana-annotations</artifactId>
                        <version>${project.version}</version>
                    </dependency>

                    <dependency>
                        <groupId>com.squareup</groupId>
                        <artifactId>javapoet</artifactId>
                        <version>${javapoet.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-generated-sources</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <phase>process-sources</phase>
                        <configuration>
                            <sources>
                                <source>${generatedSources.outputDir}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
