<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>io.ascopes.katana</groupId>
  <artifactId>katana-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Katana Parent</name>
  <packaging>pom</packaging>

  <description>
    Parent project for Katana.

    ${katana.description}
  </description>

  <modules>
    <module>katana</module>
    <module>katana-annotations</module>
    <module>katana-annotation-processor</module>
  </modules>

  <properties>
    <katana.description>
      Katana is an annotation processor for Java 8 and higher which produces data class
      implementations
      from interface definitions. Using Katana, you can massively reduce the boilerplate needed to
      implement
      standards-compliant models in a Java application.
    </katana.description>

    <katana.jdk.version>8</katana.jdk.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Library dependencies -->

      <dependency>
        <!-- Mustache templating engine based on Handlebars.js, used for error message rendering -->
        <groupId>com.github.jknack</groupId>
        <artifactId>handlebars</artifactId>
        <version>4.3.0</version>
      </dependency>

      <dependency>
        <!-- Java source code builders -->
        <groupId>com.squareup</groupId>
        <artifactId>javapoet</artifactId>
        <version>1.13.0</version>
      </dependency>

      <dependency>
        <!-- Bug detection annotations -->
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>3.19.0</version>
      </dependency>

      <!-- Test dependencies -->

      <dependency>
        <!-- Easy parsing of generated code to verify outputs in integration tests -->
        <groupId>com.github.javaparser</groupId>
        <artifactId>javaparser-symbol-solver-core</artifactId>
        <version>3.23.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <!-- Compiler test tools for unit and integration testing -->
        <groupId>com.google.testing.compile</groupId>
        <artifactId>compile-testing</artifactId>
        <version>0.19</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <!-- Test assertion utilities -->
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.11.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <!-- Unit and integration testing framework -->
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>5.8.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <!-- Mocking framework -->
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>4.0.0</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <!-- Some test dependencies need an SLF4J provider -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.7.32</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <!-- Enforce the compiler version to use -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>

          <configuration>
            <source>${katana.jdk.version}</source>
            <target>${katana.jdk.version}</target>
          </configuration>
        </plugin>

        <plugin>
          <!-- Integration test runner -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M5</version>

          <executions>
            <execution>
              <id>integration-test</id>
              <phase>test</phase>
              <goals>
                <goal>integration-test</goal>
              </goals>
              <configuration>
                <includes>
                  <include>**/*IntegrationTest.java</include>
                </includes>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <!-- Add things to the MANIFEST.MF in the output JAR -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>

          <configuration>
            <archive>
              <manifest>
                <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <Sealed>true</Sealed>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <!-- Unit test runner -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>

          <configuration>
            <includes>
              <include>**/*UnitTest.java</include>
            </includes>
          </configuration>
        </plugin>

        <plugin>
          <!-- Allows us to add additional build directories -->
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <!-- Groovy script runner -->
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>1.13.0</version>

          <dependencies>
            <dependency>
              <!-- Groovy standard library to use -->
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy</artifactId>
              <version>3.0.9</version>
              <scope>compile</scope>
            </dependency>

            <dependency>
              <!-- Needed to suppress a Maven warning, not used anywhere else directly -->
              <groupId>org.codehaus.groovy</groupId>
              <artifactId>groovy-ant</artifactId>
              <version>3.0.9</version>
              <scope>runtime</scope>
            </dependency>
          </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>